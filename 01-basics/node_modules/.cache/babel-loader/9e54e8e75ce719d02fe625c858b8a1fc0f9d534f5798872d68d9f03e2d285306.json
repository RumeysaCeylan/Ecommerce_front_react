{"ast":null,"code":"const initialState = {\n  quantity: 0\n};\nconst holderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'quantity/increment':\n      return {\n        quantity: state.quantity + 1\n      };\n    case 'quantity/add':\n      return {\n        quantity: state.quantity + Number(action.delta)\n      };\n    default:\n      return state;\n  }\n};\nexport default holderReducer;","map":{"version":3,"names":["initialState","quantity","holderReducer","state","arguments","length","undefined","action","type","Number","delta"],"sources":["C:/Users/rumey/milsoftreact/01-basics/src/redux/holderReducer.js"],"sourcesContent":["const initialState = {\r\n    quantity:0\r\n}\r\n\r\nconst holderReducer = (state=initialState,action) =>{\r\n\r\n    switch(action.type){\r\n        case 'quantity/increment':\r\n            return {\r\n                quantity : state.quantity + 1\r\n                \r\n            }\r\n        case 'quantity/add':\r\n            return{\r\n                quantity: state.quantity + Number(action.delta)\r\n            }\r\n        default : \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default holderReducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,QAAQ,EAAC;AACb,CAAC;AAED,MAAMC,aAAa,GAAG,SAAAA,CAAA,EAA8B;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACJ,YAAY;EAAA,IAACO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAE5C,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,oBAAoB;MACrB,OAAO;QACHP,QAAQ,EAAGE,KAAK,CAACF,QAAQ,GAAG;MAEhC,CAAC;IACL,KAAK,cAAc;MACf,OAAM;QACFA,QAAQ,EAAEE,KAAK,CAACF,QAAQ,GAAGQ,MAAM,CAACF,MAAM,CAACG,KAAK;MAClD,CAAC;IACL;MACI,OAAOP,KAAK;EAAC;AAGzB,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}